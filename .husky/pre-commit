echo "lint 검사 및 format 수행 중..."

# Lint 실행
pnpm lint

if [ $? -ne 0 ]; then
  echo "lint 에러 발생!"
  exit 1
fi

# 변경된 파일 가져오기, 여기서 --diff-filter=ACM 옵션은 추가(A), 변경(C), 이동(M)만 포함
changed_files=$(git diff --name-only --staged --diff-filter=ACM)

if [ $? -ne 0 ]; then
  echo "에러 발생! 변경된 파일을 가져오는 중 오류가 발생했습니다."
  exit 1
fi

# 변경된 파일들을 Prettier로 포맷팅
echo "$changed_files" | while IFS= read -r file; do
  if [[ $file == *".js" || $file == *".jsx" || $file == *".ts" || $file == *".tsx" || $file == *".json" || $file == *".css" || $file == *".mjs" ]]; then
    npx prettier --write "$file"
  fi
done

# 변경된 파일들이 있을 경우, 다시 스테이징합니다.
if [ -n "$changed_files" ]; then
  echo "$changed_files" | while IFS= read -r file; do
    git add "$file"
  done
fi

if [ $? -ne 0 ]; then
  echo "에러 발생! 파일을 다시 스테이징하는 중 오류가 발생했습니다."
  exit 1
fi

# 변경된 파일을 다시 가져와서 변경 사항 확인
new_changed_files=$(git diff --name-only --cached)

if [ -z "$new_changed_files" ]; then
  echo "변경된 파일이 없습니다. format 후 커밋을 취소합니다."
  exit 1
fi

echo "lint 및 format 성공!"